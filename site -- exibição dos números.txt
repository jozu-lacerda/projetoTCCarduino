//site -- exibição dos números

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monitoramento de Irrigação com Gráfico</title>
    <script type="module">
        // Importa as funções do Firebase SDK
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";
        import { getDatabase, ref, onValue } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-database.js";

        // Configuração do Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyDH9HV9MLwYxfXJgLysBHrpcKCZiH6lF9g",
            authDomain: "irrigador-4eb2c.firebaseapp.com",
            databaseURL: "https://irrigador-4eb2c-default-rtdb.firebaseio.com",
            projectId: "irrigador-4eb2c",
            storageBucket: "irrigador-4eb2c.firebasestorage.app",
            messagingSenderId: "823963619325",
            appId: "1:823963619325:web:081a72e783041ae7941394",
            measurementId: "G-6FF577FLB4"
        };

        // Inicializa o Firebase
        const app = initializeApp(firebaseConfig);
        const database = getDatabase(app);

        // Dados para o gráfico
        const sensorCounts = [];
        const relayActivations = [];

        // Referências no banco de dados
        const quartoRef = ref(database, "quarto");
        const sensorRef = ref(database, "sensor");

        // Atualiza os dados do quarto
        onValue(quartoRef, (snapshot) => {
            const quartoData = snapshot.val();
            const estadoSolo = quartoData.estadoSolo;
            const ledAmareloStatus = quartoData.ledAmareloStatus;
            const ledVerdeStatus = quartoData.ledVerdeStatus;
            const ledVermelhoStatus = quartoData.ledVermelhoStatus;
            const releStatus = quartoData.releStatus;
            const sensorMedia = quartoData.sensorMedia;

            document.getElementById("estado_solo").innerText = `Estado do Solo: ${estadoSolo}`;
            document.getElementById("led_amarelo").innerText = `LED Amarelo: ${ledAmareloStatus ? "Ativado" : "Desativado"}`;
            document.getElementById("led_verde").innerText = `LED Verde: ${ledVerdeStatus ? "Ativado" : "Desativado"}`;
            document.getElementById("led_vermelho").innerText = `LED Vermelho: ${ledVermelhoStatus ? "Ativado" : "Desativado"}`;
            document.getElementById("rele_status").innerText = `Relé: ${releStatus ? "Ativado" : "Desativado"}`;
            document.getElementById("sensor_media").innerText = `Média do Sensor: ${sensorMedia}`;

            // Alimenta a tabela
            addToTable(new Date().toLocaleString(), estadoSolo, ledVermelhoStatus, ledAmareloStatus, ledVerdeStatus, sensorMedia, releStatus);

            // Atualiza o gráfico com base na média do sensor
            updateGraph(sensorMedia);
        });

        // Atualiza os dados do sensor
        onValue(sensorRef, (snapshot) => {
            const sensorData = snapshot.val();
            const umidade = sensorData.umidade;

            document.getElementById("sensor_umidade").innerText = `Umidade: ${umidade}`;

            // Alimenta a tabela
            addToTable(new Date().toLocaleString(), "-", "-", "-", "-", umidade, "-");
        });

        // Função para adicionar uma linha à tabela
        function addToTable(data, estadoSolo, ledVermelho, ledAmarelo, ledVerde, sensorMedia, releStatus) {
            const table = document.getElementById("data-table");
            const newRow = table.insertRow();

            newRow.innerHTML = `
                <td>${data}</td>
                <td>${estadoSolo}</td>
                <td>${ledVermelho ? "Ativado" : "Desativado"}</td>
                <td>${ledAmarelo ? "Ativado" : "Desativado"}</td>
                <td>${ledVerde ? "Ativado" : "Desativado"}</td>
                <td>${sensorMedia}</td>
                <td>${releStatus ? "Ativado" : "Desativado"}</td>
            `;
        }

        // Função para atualizar o gráfico com a média do sensor
        function updateGraph(sensorMedia) {
            // Atualiza os dados do gráfico
            sensorCounts.push(sensorMedia);

            // Atualiza o gráfico com a nova média do sensor
            if (myChart) {
                myChart.data.labels.push(sensorCounts.length); // Aumenta o número de leituras no eixo X
                myChart.data.datasets[0].data = sensorCounts;
                myChart.update();
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>Monitoramento de Irrigação com Gráfico</h1>
    <div id="data">
        <h3>Dados do Quarto:</h3>
        <p id="estado_solo">Carregando...</p>
        <p id="led_amarelo">Carregando...</p>
        <p id="led_verde">Carregando...</p>
        <p id="led_vermelho">Carregando...</p>
        <p id="rele_status">Carregando...</p>
        <p id="sensor_media">Carregando...</p>

        <h3>Sensor de Umidade:</h3>
        <p id="sensor_umidade">Carregando...</p>
    </div>

    <h2>Histórico de Dados</h2>
    <table border="1" id="data-table">
        <thead>
            <tr>
                <th>Data</th>
                <th>Estado do Solo</th>
                <th>LED Vermelho</th>
                <th>LED Amarelo</th>
                <th>LED Verde</th>
                <th>Média do Sensor</th>
                <th>Relé</th>
            </tr>
        </thead>
        <tbody>
            <!-- Linhas dinâmicas adicionadas aqui -->
        </tbody>
    </table>

    <h2>Gráfico de Média do Sensor</h2>
    <canvas id="myChart" width="400" height="200"></canvas>

    <script>
        // Configuração inicial do gráfico
        const ctx = document.getElementById("myChart").getContext("2d");
        let myChart = new Chart(ctx, {
            type: "line",
            data: {
                labels: [], // Número de leituras do sensor
                datasets: [{
                    label: "Média do Sensor",
                    data: [], // Dados da média do sensor
                    borderColor: "rgba(75, 192, 192, 1)",
                    borderWidth: 2,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: "Número de Leituras do Sensor"
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: "Valor do Sensor"
                        },
                        min: 0,
                        max: 3500
                    }
                }
            }
        });
    </script>
</body>
</html>
